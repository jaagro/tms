<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jaagro.tms.biz.mapper.WaybillTruckFeeMapperExt">

    <select id="listWaybillTruckFeeByCondition" parameterType="com.jaagro.tms.api.dto.fee.WaybillFeeCondition"
            resultType="com.jaagro.tms.api.dto.fee.WaybillTruckFeeDto">
        select
        wtf.id, wtf.waybill_id, wtf.waybill_item_id,wtf.anomaly_id, wtf.cost_type, wtf.money,wtf.create_time,
        wtf.created_user_id,
        wfa.adjust_reason,wfa.adjust_type,wfa.customer_effect, wfa.truck_effect, wfa.notes
        from waybill_truck_fee wtf ,waybill_fee_adjustment wfa
        where wtf.id=wfa.relevance_id and wfa.relevance_type=2 and wtf.enabled=1 and wfa.enabled=1
        <if test="anomalyId!=null">
            and anomaly_id=#{anomalyId}
        </if>
    </select>
    <select id="selectByAnomalyId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from waybill_truck_fee
        where anomaly_id = #{anomalyId,jdbcType=INTEGER}
        limit 1
    </select>
    <insert id="batchInsert" parameterType="list">
        insert into waybill_truck_fee (waybill_id, waybill_item_id,
        cost_type, anomaly_id, direction,
        settle_status, money, enabled,
        create_time, created_user_id, modify_time,
        modify_user_id)
        values
        <foreach collection="waybillTruckFeeList" item="item" separator=",">
            (#{item.waybillId,jdbcType=INTEGER}, #{item.waybillItemId,jdbcType=INTEGER},
            #{item.costType,jdbcType=INTEGER}, #{item.anomalyId,jdbcType=INTEGER}, #{item.direction,jdbcType=INTEGER},
            #{item.settleStatus,jdbcType=INTEGER}, #{item.money,jdbcType=DECIMAL}, #{item.enabled,jdbcType=BIT},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.createdUserId,jdbcType=INTEGER},
            #{item.modifyTime,jdbcType=TIMESTAMP},
            #{item.modifyUserId,jdbcType=INTEGER})
        </foreach>
    </insert>
    <delete id="batchDelete" parameterType="list">
        DELETE FROM waybill_truck_fee
        WHERE
        <foreach collection="waybillTruckFeeList" separator=" or " item="item">
            (direction = #{item.direction,jdbcType=INTEGER} and cost_type = #{item.costType,jdbcType=INTEGER} and
            waybill_id = #{item.waybillId,jdbcType=INTEGER} and settle_status = 0)
        </foreach>
    </delete>
    <select id="listTruckFeeByCriteria" parameterType="com.jaagro.tms.api.dto.fee.ListTruckFeeCriteria"
            resultType="com.jaagro.tms.api.dto.fee.ListTruckFeeDto">
        SELECT
        result2.*, result1.transportFee,
        result1.anomalyFee
        FROM
        (
        SELECT
        wtf.waybill_id waybillId,
        SUM(
        CASE
        WHEN wtf.anomaly_id IS NULL THEN
        wtf.money
        ELSE
        0
        END
        ) transportFee,
        SUM(
        CASE
        WHEN wtf.anomaly_id IS NOT NULL AND wtf.direction = 1 THEN
        wtf.money
        WHEN wtf.anomaly_id IS NOT NULL AND wtf.direction = 2 THEN
        -wtf.money
        ELSE
        0
        END
        ) anomalyFee

        FROM
        waybill_truck_fee wtf
        LEFT JOIN waybill w ON wtf.waybill_id = w.id
        WHERE wtf.enabled = 1
        GROUP BY
        wtf.waybill_id
        ) result1
        JOIN (
        SELECT
        wg.waybill_id waybillId,
        max(date_format(w.modify_time,'%Y-%m-%d')) completeTime,
        GROUP_CONCAT(wg.goods_name) goodsName,
        SUM(wg.unload_quantity) unloadQuantity,
        SUM(wg.unload_weight) unloadWeight,
        max(o.goods_type) goodsType,
        max(d.department_name) departmentName,
        t.truck_number truckNumber,
        cs1.site_name AS loadSite,
        GROUP_CONCAT(cs2.site_name) unloadSite
        FROM
        waybill_goods wg
        LEFT JOIN waybill w ON wg.waybill_id = w.id
        LEFT JOIN orders o ON w.order_id = o.id
        LEFT JOIN waybill_items wi ON wg.waybill_item_id = wi.id
        LEFT JOIN crmserver.customer_site cs1 ON cs1.id = o.load_site_id
        LEFT JOIN crmserver.customer_site cs2 ON cs2.id = wi.unload_site_id
        LEFT JOIN crmserver.truck t ON w.truck_id = t.id
        LEFT JOIN userserver.department d ON w.network_id = d.id
        WHERE
        w.waybill_status = '已完成'
        AND w.receipt_status = 2
        <if test="waybillId != null">
            AND w.id = #{waybillId}
        </if>
        <if test="truckNumber != null and truckNumber !=''">
            <![CDATA[AND (t.truck_number like concat(#{truckNumber},'%') )]]>
        </if>
        <if test="completeTimeStart != null and completeTimeStart != ''">
            AND w.modify_time &gt;= #{completeTimeStart}
        </if>
        <if test="completeTimeEnd != null and completeTimeEnd != ''">
            AND w.modify_time &lt; #{completeTimeEnd}
        </if>
        <if test="goodsType != null">
            AND o.goods_type = #{goodsType}
        </if>
        GROUP BY
        wg.waybill_id
        ) result2 ON result1.waybillId = result2.waybillId where result1.transportFee > 0 order by result2.completeTime DESC
    </select>
</mapper>